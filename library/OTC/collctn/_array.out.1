@enter - void test1()
 @enter - void test2()
  vec.size() = 10
  vec = 0 1 4 9 16 25 36 49 64 81
 @exit - void test2()
 @enter - void test3()
  vec1 = 0 1 4 9 16 25 36 49 64 81
  vec2 = 0 1 4 9 16 25 36 49 64 81
 @exit - void test3()
 @enter - void test4()
  vec1 = 0 1 4 9 16 25 36 49 64 81
  vec2 = 1 4 9 16 25 36 49 64
  vec1 = 0 1 4 9 16 25 36 49 64 81
  vec3 = 1 4 9 16 25 36 49 64
 @exit - void test4()
 @enter - void test5()
  vec1 = 0 1 4 9 16 25 36 49 64 81
  vec2 = 0 1 4 9 16 25 36 49 64 81
 @exit - void test5()
 @enter - void test6()
  vec.size() = 10
  vec = 0 1 4 9 16 25 36 49 64 81
  vec.resize(5)
  vec.size() = 5
  vec = 0 1 4 9 16
  vec.resize(10)
  vec.size() = 10
  vec = 0 1 4 9 16 25 36 49 64 81
 @exit - void test6()
 @enter - void test7()
  vec1.size() = 11
  vec1.range().lower() = -1
  vec1.range().upper() = 10
  vec1 = 1 0 1 4 9 16 25 36 49 64 81
  vec2.size() = 11
  vec2.range().lower() = -1
  vec2.range().upper() = 10
  vec2 = 1 0 1 4 9 16 25 36 49 64 81
 @exit - void test7()
 @enter - void test8()
  vec1.size() = 11
  vec1.range().lower() = -1
  vec1.range().upper() = 10
  vec1 = 1 1 1 1 1 1 1 1 1 1 1
  vec2.size() = 11
  vec2.range().lower() = -1
  vec2.range().upper() = 10
  vec2 = 2 2 2 2 2 2 2 2 2 2 2
 @exit - void test8()
 @enter - void test9()
  vec.size() = 11
  vec.range().lower() = -1
  vec.range().upper() = 10
  vec = 1 1 1 1 1 1 1 1 1 1 1
  vec.replaceItem(2,0)
  vec = 1 2 1 1 1 1 1 1 1 1 1
  vec.replaceRange(0,9,3)
  vec = 1 3 3 3 3 3 3 3 3 3 1
 @exit - void test9()
 @enter - void test10()
  vec.size() = 11
  vec = -1 0 1 2 3 4 5 6 7 8 9
  vec.apply(worker)
  vec = 1 0 1 4 9 16 25 36 49 64 81
 @exit - void test10()
 @enter - void test11()
  vec.size() = 11
  vec = -1 0 1 2 3 4 5 6 7 8 9
  vec.apply(visitor)
  sum = 44
 @exit - void test11()
 @enter - void test12()
  vec.size() = 11
  vec = -1 0 1 2 3 4 5 6 7 8 9
  vec.apply(worker)
  vec = 1 0 1 4 9 16 25 36 49 64 81
 @exit - void test12()
 @enter - void test13()
  vec.size() = 11
  vec = -1 0 1 2 3 4 5 6 7 8 9
  vec.apply(visitor)
  sum = 44
 @exit - void test13()
 @enter - void test14()
  vec1.size() = 10
  vec1 = 0 1 4 9 16 25 36 49 64 81
  vec1.buffer() == vec2.buffer() = 1
  vec2 = 0 1 4 9 16 25 36 49 64 81
  vec1 = 0 2 4 6 8 10 12 14 16 18
  vec2 = 0 2 4 6 8 10 12 14 16 18
 @exit - void test14()
 @enter - void test15()
  vec1.size() = 10
  items =  0 1 4 9 16 25 36 49 64 81
  items(1,8) =  1 4 9 16 25 36 49 64
  vec1.resize(0,1,v)
  iter =  1 4 9 16 25 36 49 64
  vec1 = 0
 @exit - void test15()
 @enter - void test16()
  vec1.size() = 10
  pairs =  0/0 1/1 2/4 3/9 4/16 5/25 6/36 7/49 8/64 9/81
  pairs(1,8) =  1/1 2/4 3/9 4/16 5/25 6/36 7/49 8/64
  vec1.resize(0,1,v)
  iter =  1/1 2/4 3/9 4/16 5/25 6/36 7/49 8/64
  vec1 = 0/0
 @exit - void test16()
@exit - void test1()
