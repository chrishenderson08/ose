@enter - void test1()
 @enter - void test2()
  stack1.isEmpty() = 1
  stack1.isFull() = 1
  stack2.isEmpty() = 1
  stack2.isFull() = 0
  stack3.isEmpty() = 1
  stack3.isFull() = 0
 @exit - void test2()
 @enter - void test3()
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.pop() = 9 8 7 6 5 4 3 2 1 0
 @exit - void test3()
 @enter - void test4()
  stack1.capacity() = 10
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.count() = 10
  stack1.clear()
  stack1.count() = 0
 @exit - void test4()
 @enter - void test5()
  stack1.capacity() = 10
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.count() = 10
  stack1.discard(4)
  stack1.count() = 6
  stack1.pop() = 5
  stack1.pop() = 4
  stack1.discard(4)
  stack1.count() = 0
 @exit - void test5()
 @enter - void test6()
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.pop() = 9 8 7 6 5 4 3 2 1 0
 @exit - void test6()
 @enter - void test7()
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.peek(0) = 9
  stack1.peek(1) = 8
  stack1.peek(2) = 7
  stack1.peek(3) = 6
  stack1.peek(4) = 5
  stack1.peek(5) = 4
  stack1.peek(6) = 3
  stack1.peek(7) = 2
  stack1.peek(8) = 1
  stack1.peek(9) = 0
 @exit - void test7()
 @enter - void test8()
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.pop() = 9 8 7 6 5 4 3 2 1 0
  stack2.pop() = 9 8 7 6 5 4 3 2 1 0
 @exit - void test8()
 @enter - void test9()
  stack1.push() = 0 1 2 3 4 5 6 7 8 9
  stack1.pop() = 9 8 7 6 5 4 3 2 1 0
  stack2.pop() = 9 8 7 6 5 4 3 2 1 0
 @exit - void test9()
@exit - void test1()
